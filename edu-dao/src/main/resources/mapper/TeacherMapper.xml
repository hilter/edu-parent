<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.edu.model.Teacher">
    <id column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="rank_id" jdbcType="INTEGER" property="rankId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="teacher_tel" jdbcType="VARCHAR" property="teacherTel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="registration_time" jdbcType="TIMESTAMP" property="registrationTime" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="personal_profile" jdbcType="VARCHAR" property="personalProfile" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
  <sql id="Base_Column_List">
    teacher_id, rank_id, teacher_name, username, password, teacher_tel, email, sex, age, 
    registration_time, head_portrait, personal_profile, position
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edu.model.Teacher">
    insert into teacher (teacher_id, rank_id, teacher_name, 
      username, password, teacher_tel, 
      email, sex, age, registration_time, 
      head_portrait, personal_profile, position
      )
    values (#{teacherId,jdbcType=INTEGER}, #{rankId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{teacherTel,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{registrationTime,jdbcType=TIMESTAMP}, 
      #{headPortrait,jdbcType=VARCHAR}, #{personalProfile,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.edu.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="rankId != null">
        rank_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="teacherTel != null">
        teacher_tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="registrationTime != null">
        registration_time,
      </if>
      <if test="headPortrait != null">
        head_portrait,
      </if>
      <if test="personalProfile != null">
        personal_profile,
      </if>
      <if test="position != null">
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="rankId != null">
        #{rankId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null">
        #{teacherTel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="registrationTime != null">
        #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headPortrait != null">
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="personalProfile != null">
        #{personalProfile,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.model.Teacher">
    update teacher
    <set>
      <if test="rankId != null">
        rank_id = #{rankId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null">
        teacher_tel = #{teacherTel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="registrationTime != null">
        registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headPortrait != null">
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="personalProfile != null">
        personal_profile = #{personalProfile,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.model.Teacher">
    update teacher
    set rank_id = #{rankId,jdbcType=INTEGER},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      teacher_tel = #{teacherTel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      personal_profile = #{personalProfile,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
</mapper>